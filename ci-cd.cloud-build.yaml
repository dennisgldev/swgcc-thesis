steps:
  # Copiar env.example a .env
  - id: 'Copy env.example to .env'
    name: 'alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - 'cp .env.example .env'

  # Construir la imagen usando Docker Compose
  - id: 'Build with Docker Compose'
    name: 'docker/compose:1.29.2'
    entrypoint: 'sh'
    args:
      - '-c'
      - 'docker-compose -f docker-compose.yml build'

  # Etiquetar la imagen antes de hacer el push
  - id: 'Tag Image'
    name: 'docker'
    entrypoint: 'sh'
    args:
      - '-c'
      - 'docker tag app:latest ${_IMAGE_NAME}'

  # Empujar la imagen al registro de artefactos
  - id: 'Push Image'
    name: 'docker'
    entrypoint: 'sh'
    args:
      - '-c'
      - 'docker push ${_IMAGE_NAME}'

images:
  - '${_IMAGE_NAME}'

options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true

substitutions:
  _IMAGE_NAME: '${_ARTIFACT_REGISTRY_LOCATION}/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPOSITORY}/${_DOCKER_IMAGE_NAME}:${SHORT_SHA}'

tags:
  - swgcc-thesis
